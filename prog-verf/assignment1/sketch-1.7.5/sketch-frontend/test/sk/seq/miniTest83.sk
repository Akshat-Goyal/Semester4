int L = 3;
int W = 8;  /* FIXME should be an exponent of L. */

int
count (bit[W] a)
{
    int ret = 0;

    for (int i = 0; i < W; i++)
	if (a[i])
	    ret = ret + 1;

    return ret;
}

int
count_sk (bit[W] a) implements count
{
    bit[L * W] mm;
    int[L] ss;
    bit[W] m;
    int s;
    int i;

    ss[0 :: L] = 0;
    mm[0 :: L * W] = 0;

    s = 4;
    m[0] = 1;
    m[1] = 1;
    m[2] = 1;
    m[3] = 1;
    m[4] = 0;
    m[5] = 0;
    m[6] = 0;
    m[7] = 0;

    i = 0;
    repeat(L + ??) {
	mm[i * W :: W] = m;
	ss[i] = s;
	s = s / 2;
	m = m ^ (m << s);
	i++;
    }

    i = L;
    repeat(L) {
	i--;
	m = mm[i * W :: W];
	s = ss[i];
	a = (a & m) + ((a >> s) & m);
    }

    return (int) a;
}


