int N = 2;
// x <= y
generator bit leq(bit x, bit y){ /* automatically rewritten */
	return !x || y;
}
bit[N] sort(bit[N] input){
	bit[N] output={1,1};
	if( input[0] && input[1] ){ output[0] = 1; output[1] = 1;   };
	if( !input[0] && input[1] ){ output[0] = 0; output[1] = 1;   };
	if( input[0] && !input[1] ){ output[0] = 0; output[1] = 1;   };
	if( !input[0] && !input[1] ){ output[0] = 0; output[1] = 0;   };
	return output;
}
bit[N] mergeSort(bit[N] input)implements sort{
	bit[N] output={1,1};
	int k=0;
	for(int i=0; i<N; ++i){
		if(!input[i]){
			output[k] = 0;
			k = k+1;
		}
	}
	return output;
}