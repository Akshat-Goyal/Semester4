SKETCH version 1.7.5
Benchmark = miniTestb558.sk
    [0;32m[1584381959.4080 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1584381959.5040 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
miniTestb558.sk:26: Making final n
miniTestb558.sk:18: Making final n
miniTestb558.sk:7: Making final n
miniTestb558.sk:5: Making final n
    [0;32m[1584381959.5440 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1584381959.5460 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1584381959.5470 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1584381959.5480 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1584381959.5490 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1584381959.5550 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 8
[SATBackend] MAX FUNC INLINING  = 5
[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
resolved cegis to path /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis
    [0;32m[1584381959.6010 - DEBUG] executing /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis -showDAG -nativeints --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/akshat/.sketch/tmp/miniTestb558.sk/solution0-0 /home/akshat/.sketch/tmp/miniTestb558.sk/input0.tmp[0m
[SATBackend] Launching: /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis -showDAG -nativeints --bnd-inbits 5 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 5 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/akshat/.sketch/tmp/miniTestb558.sk/solution0-0 /home/akshat/.sketch/tmp/miniTestb558.sk/input0.tmp 
starting command line: [/home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis, -showDAG, -nativeints, --bnd-inbits, 5, --boundmode, CALLNAME, --verbosity, 5, --print-version, -simiters, 4, -synth, MINI, -verif, MINI, --assumebcheck, --bnd-inline-amnt, 5, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -o, /home/akshat/.sketch/tmp/miniTestb558.sk/solution0-0, /home/akshat/.sketch/tmp/miniTestb558.sk/input0.tmp]
NATIVE INTS ONOverriding inputs with 5
boundmode = CALLNAME
 synth = |MINI|
 verif = |MINI|
assuming  bounds checks
SOLVER RAND SEED = 1584381959
 optimization level = 6
Reading SKETCH Program in File /home/akshat/.sketch/tmp/miniTestb558.sk/input0.tmp
* before  EVERYTHING: main__WrapperNospec::SPEC nodes = 2	 main__Wrapper::SKETCH nodes = 4
 INBITS = 5
 CBITS  = 5
 input_ints = 2 	 input_bits = 0
 Inlining amount = 5
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 303
dagmain__WrapperNospec{
0= (8)
n_2_2_0
2= n_2_2_0 < (8) 
3= Assume 2 : Assume at miniTestb558.sk:27
4= (0)
5= n_2_2_0 < (0) 
6= 5 ! 
7= ASSERT (!5) : Negative array lengths not allowed n_4  miniTestb558.sk:28
8= (8) < n_2_2_0 
9= 8 ! 
10= ASSERT (!8) : miniTestb558.sk:7: This loop was unrolled 8 times, but apparently that was not enough. Use the --bnd-unroll-amnt flag for better results.
11= (1)
12= (7)
13= (6)
14= (5)
15= (4)
16= (3)
17= (2)
a_3_3_0
19= a_3_3_0[(0)]
20= (0) < n_2_2_0 
21= 20 & 19 
22= (0){(0)->21}
23= a_3_3_0[(1)]
24= (1) < n_2_2_0 
25= 24 & 23 
26= 22{(1)->25}
27= a_3_3_0[(2)]
28= (2) < n_2_2_0 
29= 28 & 27 
30= 26{(2)->29}
31= a_3_3_0[(3)]
32= (3) < n_2_2_0 
33= 32 & 31 
34= 30{(3)->33}
35= a_3_3_0[(4)]
36= (4) < n_2_2_0 
37= 36 & 35 
38= 34{(4)->37}
39= a_3_3_0[(5)]
40= (5) < n_2_2_0 
41= 40 & 39 
42= 38{(5)->41}
43= a_3_3_0[(6)]
44= (6) < n_2_2_0 
45= 44 & 43 
46= 42{(6)->45}
47= a_3_3_0[(7)]
48= (7) < n_2_2_0 
49= 48 & 47 
50= 46{(7)->49}
51= moo#0[(1)](n_2_2_0, 50, )
52= (-1)
53= n_2_2_0 + (-1) 
54= 53 < (0) 
55= 54 & 20 
56= 55 ! 
57= ASSERT (!55) : miniTestb558.sk:11: Array out of bounds
58= a_3_3_0[53]
59= (-8)
60= (-8) + n_2_2_0 
61= a_3_3_0[60]
62= 51[0]
63= 62[(7)]
64= 63 ^ 61 
65= 64 & 48 
66= 65 ! 
67= (-7)
68= (-7) + n_2_2_0 
69= a_3_3_0[68]
70= 62[(6)]
71= 70 ^ 69 
72= 71 & 44 
73= 72 ! 
74= (-6)
75= (-6) + n_2_2_0 
76= a_3_3_0[75]
77= 62[(5)]
78= 77 ^ 76 
79= 78 & 40 
80= 79 ! 
81= (-5)
82= (-5) + n_2_2_0 
83= a_3_3_0[82]
84= 62[(4)]
85= 84 ^ 83 
86= 85 & 36 
87= 86 ! 
88= (-4)
89= (-4) + n_2_2_0 
90= a_3_3_0[89]
91= 62[(3)]
92= 91 ^ 90 
93= 92 & 32 
94= 93 ! 
95= (-3)
96= (-3) + n_2_2_0 
97= a_3_3_0[96]
98= 62[(2)]
99= 98 ^ 97 
100= 99 & 28 
101= 100 ! 
102= (-2)
103= (-2) + n_2_2_0 
104= a_3_3_0[103]
105= 62[(1)]
106= 105 ^ 104 
107= 106 & 24 
108= 107 ! 
109= 62[(0)]
110= 109 ^ 58 
111= 110 & 20 
112= 111 ! 
113= (!111) & (!107) 
114= 113 & (!100) 
115= 114 & (!93) 
116= 115 & (!86) 
117= 116 & (!79) 
118= 117 & (!72) 
119= 118 & (!65) 
_p_out_reverse_ANONYMOUS1_0
121= [119]$_p_out_reverse_ANONYMOUS1_0, 62, $
122= 121[(0)]
123= 122 ^ 58 
124= 123 & 20 
125= 124 ! 
126= HASSERT (!124) : Assert at miniTestb558.sk:11 (0)
127= n_2_2_0 < (2) 
128= 127 & 24 
129= 128 ! 
130= ASSERT (!128) : miniTestb558.sk:11: Array out of bounds
131= 121[(1)]
132= 131 ^ 104 
133= 132 & 24 
134= 133 ! 
135= HASSERT (!133) : Assert at miniTestb558.sk:11 (0)
136= n_2_2_0 < (3) 
137= 136 & 28 
138= 137 ! 
139= ASSERT (!137) : miniTestb558.sk:11: Array out of bounds
140= 121[(2)]
141= 140 ^ 97 
142= 141 & 28 
143= 142 ! 
144= HASSERT (!142) : Assert at miniTestb558.sk:11 (0)
145= n_2_2_0 < (4) 
146= 145 & 32 
147= 146 ! 
148= ASSERT (!146) : miniTestb558.sk:11: Array out of bounds
149= 121[(3)]
150= 149 ^ 90 
151= 150 & 32 
152= 151 ! 
153= HASSERT (!151) : Assert at miniTestb558.sk:11 (0)
154= n_2_2_0 < (5) 
155= 154 & 36 
156= 155 ! 
157= ASSERT (!155) : miniTestb558.sk:11: Array out of bounds
158= 121[(4)]
159= 158 ^ 83 
160= 159 & 36 
161= 160 ! 
162= HASSERT (!160) : Assert at miniTestb558.sk:11 (0)
163= n_2_2_0 < (6) 
164= 163 & 40 
165= 164 ! 
166= ASSERT (!164) : miniTestb558.sk:11: Array out of bounds
167= 121[(5)]
168= 167 ^ 76 
169= 168 & 40 
170= 169 ! 
171= HASSERT (!169) : Assert at miniTestb558.sk:11 (0)
172= n_2_2_0 < (7) 
173= 172 & 44 
174= 173 ! 
175= ASSERT (!173) : miniTestb558.sk:11: Array out of bounds
176= 121[(6)]
177= 176 ^ 69 
178= 177 & 44 
179= 178 ! 
180= HASSERT (!178) : Assert at miniTestb558.sk:11 (0)
181= 2 & 48 
182= 181 ! 
183= ASSERT (!181) : miniTestb558.sk:11: Array out of bounds
184= 121[(7)]
185= 184 ^ 61 
186= 185 & 48 
187= 186 ! 
188= HASSERT (!186) : Assert at miniTestb558.sk:11 (0)
189= 20 ! 
H__0
191= H__0 - 
192= 191 < (0) 
193= n_2_2_0 + 191 
194= 193 < (0) 
195= 194 ! 
196= (!194) & 192 
197= 196 | (!20) 
198= ASSERT 197 : miniTestb558.sk:21: Array out of bounds
199= 24 ! 
200= 193 + (-1) 
201= 200 < n_2_2_0 
202= 200 < (0) 
203= 202 ! 
204= (!202) & 201 
205= 204 | (!24) 
206= ASSERT 205 : miniTestb558.sk:21: Array out of bounds
207= 28 ! 
208= 193 + (-2) 
209= 208 < n_2_2_0 
210= 208 < (0) 
211= 210 ! 
212= (!210) & 209 
213= 212 | (!28) 
214= ASSERT 213 : miniTestb558.sk:21: Array out of bounds
215= 32 ! 
216= 193 + (-3) 
217= 216 < n_2_2_0 
218= 216 < (0) 
219= 218 ! 
220= (!218) & 217 
221= 220 | (!32) 
222= ASSERT 221 : miniTestb558.sk:21: Array out of bounds
223= 36 ! 
224= 193 + (-4) 
225= 224 < n_2_2_0 
226= 224 < (0) 
227= 226 ! 
228= (!226) & 225 
229= 228 | (!36) 
230= ASSERT 229 : miniTestb558.sk:21: Array out of bounds
231= 40 ! 
232= 193 + (-5) 
233= 232 < n_2_2_0 
234= 232 < (0) 
235= 234 ! 
236= (!234) & 233 
237= 236 | (!40) 
238= ASSERT 237 : miniTestb558.sk:21: Array out of bounds
239= 44 ! 
240= 193 + (-6) 
241= 240 < n_2_2_0 
242= 240 < (0) 
243= 242 ! 
244= (!242) & 241 
245= 244 | (!44) 
246= ASSERT 245 : miniTestb558.sk:21: Array out of bounds
247= 48 ! 
248= 193 + (-7) 
249= 248 < n_2_2_0 
250= 248 < (0) 
251= 250 ! 
252= (!250) & 249 
253= 252 | (!48) 
254= ASSERT 253 : miniTestb558.sk:21: Array out of bounds
255= a_3_3_0[193]
256= 20 & 255 
257= 122 ^ 256 
258= 257 ! 
259= [20]$(1), (!257), $
260= a_3_3_0[200]
261= 24 & 260 
262= 131 ^ 261 
263= 262 ! 
264= 259 & (!262) 
265= [24]$259, 264, $
266= a_3_3_0[208]
267= 28 & 266 
268= 140 ^ 267 
269= 268 ! 
270= 265 & (!268) 
271= [28]$265, 270, $
272= a_3_3_0[216]
273= 32 & 272 
274= 149 ^ 273 
275= 274 ! 
276= 271 & (!274) 
277= [32]$271, 276, $
278= a_3_3_0[224]
279= 36 & 278 
280= 158 ^ 279 
281= 280 ! 
282= 277 & (!280) 
283= [36]$277, 282, $
284= a_3_3_0[232]
285= 40 & 284 
286= 167 ^ 285 
287= 286 ! 
288= 283 & (!286) 
289= [40]$283, 288, $
290= a_3_3_0[240]
291= 44 & 290 
292= 176 ^ 291 
293= 292 ! 
294= 289 & (!292) 
295= [44]$289, 294, $
296= a_3_3_0[248]
297= 48 & 296 
298= 184 ^ 297 
299= 298 ! 
300= 295 & (!298) 
301= [48]$295, 300, $
302= ASSERT 301 : Assert at miniTestb558.sk:30 (2)
}
  # OF CONTROLS:    2
 control_ints = 2 	 control_bits = 0
inputSize = 66	ctrlSize = 5
Random seeds = 1
BEG CHECK
 * After optims it became = 248 was 303
miniTestb558.sk:21: Array out of bounds
END CHECK
********  0	ftime= 0	ctime= 0
BEG FIND
Level 1  intsize = 2
 * After optims it became = 28 was 303
* TIME TO ADD INPUT :  0.001 ms 
DECISIONS START = 0
f# %assign: 98 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 68
END FIND
BEG CHECK
 * After optims it became = 185 was 303
c# %assign: 12 clauses: 1 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 185 to 165
After all optim
DECISIONS START = 0
c# %assign: 21 clauses: 151 learn: 2 restart: 1 decision: 29 propagated: 145
c# %assign: 7 clauses: 1 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 185 to 166
After all optim
DECISIONS START = 0
c# %assign: 57 clauses: 492 learn: 5 restart: 1 decision: 107 propagated: 1026
c# %assign: 34 clauses: 22 learn: 0 restart: 0 decision: 0 propagated: 9
 reduced size from 185 to 166
After all optim
DECISIONS START = 0
c# %assign: 58 clauses: 580 learn: 5 restart: 1 decision: 85 propagated: 1172
DECISIONS START = 0
c# %assign: 97 clauses: 0 learn: 0 restart: 1 decision: 2 propagated: 46
c# %assign: 56 clauses: 22 learn: 0 restart: 0 decision: 0 propagated: 25
 reduced size from 185 to 166
After all optim
DECISIONS START = 0
c# %assign: 60 clauses: 580 learn: 5 restart: 1 decision: 86 propagated: 1195
END CHECK
********  1	ftime= 0.001	ctime= 0.004
 *GOT THE CORRECT ANSWER IN 2 iterations.
 *FIND TIME 0.001 CHECK TIME 0.004 TOTAL TIME 0.005
VALUES H__0: 1, 
RESULT = 2  
**ROUND 0 : 0 Round time:  0.007 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  0.01
Model building time (ms): 0.003
Solution time (ms):       0.007
Max virtual mem (bytes):  92758016
Max resident mem (bytes): 1732608
Max private mem (bytes):  91176960
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 0.059
      model building time (s) ---------> 0.0
      solution time (s) ---------------> 0.0
      max memory usage (MiB) ----------> 88.46094
      [SAT-specific solution stats]
      initial number of nodes ---------> 4
      number of nodes after opts ------> 303
      number of controls --------------> 2
      total number of control bits ----> 5

[SATBackend] Solver exit value: 0
    [0;32m[1584381959.6630 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1584381959.6650 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1584381959.6800 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
    [0;33m[1584381959.6910 - NOTE] Wrote test harness to ./miniTestb558_test.cpp[0m
[SKETCH] DONE
Total time = 336
