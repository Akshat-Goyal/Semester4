pragma options "--bnd-unroll-amnt 32";

struct Foo{
  int n;
  int[n] a;
}

struct Moo{
    Foo f;
    int[f.n] b;    
}

int min(int a, int b){
    return a<b?a:b;
}

Foo newFoo(int n){
    Foo f= new Foo(n=n);
    for(int i=0; i<f.n; ++i){
        f.a[i] = i;
    }
    return f;
}
int q = 5;
Foo tt = new Foo(n=5); 

void modi(){
    q = q + 1;
}

harness void main(int n){
    int[10] x = ??;
    Foo f = new Foo(n=n, a=x[0::min(10,n)] );
    if(??){
        f = null;
    }
    Foo b = newFoo(10);
    Moo m = new Moo(f=f, b=f.a);
    for(int i=0; i<n; ++i){
        assert m.b[i]== m.f.a[i];
        if(i<10){            
            assert m.b[i] == b.a[i];
        }
    }
    q = n;    
    int aa = q;
    modi();
    int bb = aa;
    int cc = bb;
    Foo tat = new Foo(n=cc);
    int dd = cc;
    int ee = dd;
    Foo nfnf = newFoo(ee);
    assert nfnf.n == q-1;
}