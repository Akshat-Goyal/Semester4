SKETCH version 1.7.5
Benchmark = miniTestb380.sk
    [0;32m[1584382447.9020 - DEBUG] Running stage 'parse' -- Parse the program from a file[0m
    [0;32m[1584382448.0220 - DEBUG] Running stage 'preproc' -- Preprocessing (used for all further transformations)[0m
miniTestb380.sk:21: Making final N
miniTestb380.sk:21: Making final N
miniTestb380.sk:11: Making final N
null: Making final N1
    [0;32m[1584382448.0610 - DEBUG] Running stage SpmdLowLevelCStage[0m
    [0;32m[1584382448.0630 - DEBUG]    Running visitor FlattenStmtBlocks2[0m
    [0;32m[1584382448.0640 - DEBUG]    Running visitor SplitAssignFromVarDef[0m
    [0;32m[1584382448.0641 - DEBUG]    Running visitor EliminateComplexForLoops[0m
    [0;32m[1584382448.0660 - DEBUG] Running stage 'lowering' -- Lower for SKETCH backend[0m
    [0;32m[1584382448.0720 - DEBUG] Running stage 'sten' -- Stencil transformations[0m
    [0;32m[1584382448.0910 - DEBUG] newFloatFunction FL_0_5[0m

//// After stage lowering
/* BEGIN PACKAGE ANONYMOUS*/
/*null*/

uninterp bit FL_0_5 (ref bit _out)/*null*/
/*miniTestb380.sk:11*/

void cacheObv1d (int N_3, bit[N_3] in_4, ref bit[N_3] _out_5)/*miniTestb380.sk:11*/
{
  {
    {
      {
        for(int __sa5 = 0; __sa5 < N_3; __sa5 = __sa5 + 1)/*Canonical*/
        {
          _out_5[__sa5] = 0;
        }
      }
      {
        for(int __sa6 = 0; __sa6 < N_3; __sa6 = __sa6 + 1)/*Canonical*/
        {
          _out_5[__sa6] = 0;
        }
      }
      int j_6;
      if(0 < N_3)/*miniTestb380.sk:14*/
      {
        assert ((0 >= 0) && ((N_3 - 1) < N_3)); //miniTestb380.sk:15: Array out of bounds
        assert ((0 >= 0) && ((N_3 - 1) < N_3)); //miniTestb380.sk:15: Either null pointer or Array out of bounds
      }
      for(j_6 = 0; j_6 < N_3; j_6 = j_6 + 1)/*Canonical*/
      {
        bit __sa1;
        FL_0_5(__sa1);
        _out_5[j_6] = (in_4[j_6]) ^ __sa1;
      }
      return;
    }
  }
}
/*miniTestb380.sk:21*/

void cacheObv1dSK (int N_3, bit[N_3] in_4, ref bit[N_3] _out_5)  implements cacheObv1d/*miniTestb380.sk:21*/
{
  {
    {
      {
        for(int __sa3 = 0; __sa3 < N_3; __sa3 = __sa3 + 1)/*Canonical*/
        {
          _out_5[__sa3] = 0;
        }
      }
      {
        for(int __sa4 = 0; __sa4 < N_3; __sa4 = __sa4 + 1)/*Canonical*/
        {
          _out_5[__sa4] = 0;
        }
      }
      forLoop_t21@ANONYMOUS(0, N_3, N_3, in_4, _out_5);
      return;
    }
  }
}
/*miniTestb380.sk:4*/

void forLoop_t21 (int low_7, int high_8, int N1_9, bit[N1_9] in2_0_a, ref bit[N1_9] out0_b)/*miniTestb380.sk:4*/
{
  {
    {
      assert (N1_9 >= 0); //Negative array lengths not allowed N1_9  miniTestb380.sk:4
      bit[N1_9] in2_c;
      in2_c = in2_0_a;
      if(low_7 < high_8)/*miniTestb380.sk:5*/
      {
        int j_d;
        j_d = low_7;
        int N_e;
        N_e = N1_9;
        bit _has_out__f;
        _has_out__f = 0;
        assert ((j_d >= 0) && (j_d < N1_9)); //miniTestb380.sk:26: Array out of bounds
        assert ((j_d >= 0) && (j_d < N1_9)); //miniTestb380.sk:26: Either null pointer or Array out of bounds
        bit __sa2;
        FL_0_5(__sa2);
        out0_b[j_d] = (in2_c[j_d]) ^ __sa2;
        int low_7_s0;
        low_7_s0 = low_7 + 1;
        forLoop_t21@ANONYMOUS(low_7_s0, high_8, N1_9, in2_c, out0_b);
      }
    }
  }
}
/* END PACKAGE ANONYMOUS*/
------------------------------

[SATBackend] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[SATBackend] MAX LOOP UNROLLING = 8
[SATBackend] MAX FUNC INLINING  = 4
[SATBackend] After prog.accept(partialEval)
[SATBackend] OFILE = null
resolved cegis to path /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis
    [0;32m[1584382448.1170 - DEBUG] executing /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis -nativeints --bnd-inbits 2 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 4 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/akshat/.sketch/tmp/miniTestb380.sk/solution0-0 /home/akshat/.sketch/tmp/miniTestb380.sk/input0.tmp[0m
[SATBackend] Launching: /home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis -nativeints --bnd-inbits 2 --boundmode CALLNAME --verbosity 5 --print-version -simiters 4 -synth MINI -verif MINI --assumebcheck --bnd-inline-amnt 4 -angelictupledepth 1 -srctupledepth 2 -sprandbias 1 -o /home/akshat/.sketch/tmp/miniTestb380.sk/solution0-0 /home/akshat/.sketch/tmp/miniTestb380.sk/input0.tmp 
starting command line: [/home/akshat/Music/sketch-1.7.5/sketch-backend/src/SketchSolver/cegis, -nativeints, --bnd-inbits, 2, --boundmode, CALLNAME, --verbosity, 5, --print-version, -simiters, 4, -synth, MINI, -verif, MINI, --assumebcheck, --bnd-inline-amnt, 4, -angelictupledepth, 1, -srctupledepth, 2, -sprandbias, 1, -o, /home/akshat/.sketch/tmp/miniTestb380.sk/solution0-0, /home/akshat/.sketch/tmp/miniTestb380.sk/input0.tmp]
NATIVE INTS ONOverriding inputs with 2
boundmode = CALLNAME
 synth = |MINI|
 verif = |MINI|
assuming  bounds checks
SOLVER RAND SEED = 1584382448
 optimization level = 6
Reading SKETCH Program in File /home/akshat/.sketch/tmp/miniTestb380.sk/input0.tmp
* before  EVERYTHING: cacheObv1d::SPEC nodes = 60	 cacheObv1dSK::SKETCH nodes = 13
 INBITS = 2
 CBITS  = 5
 input_ints = 2 	 input_bits = 0
 Inlining amount = 4
 Inlining functions in the sketch.
 Inlining functions in the spec.
* Final Problem size: Problem nodes = 76
  # OF CONTROLS:    0
 control_ints = 0 	 control_bits = 0
inputSize = 7	ctrlSize = 0
Random seeds = 1
BEG CHECK
 * After optims it became = 67 was 76
c# %assign: 12 clauses: 1 learn: 0 restart: 0 decision: 0 propagated: 1
 reduced size from 67 to 60
After all optim
DECISIONS START = 0
c# %assign: 40 clauses: 54 learn: 0 restart: 1 decision: 9 propagated: 43
END CHECK
********  0	ftime= 0	ctime= 0.001
 *GOT THE CORRECT ANSWER IN 1 iterations.
 *FIND TIME 0 CHECK TIME 0.001 TOTAL TIME 0.001
VALUES 
RESULT = 2  
**ROUND 0 : 0 Round time:  0.001 ms 
RNDDEG = -1
return 0

----- Statistics -----
Total elapsed time (ms):  0.002
Model building time (ms): 0.001
Solution time (ms):       0.001
Max virtual mem (bytes):  92758016
Max resident mem (bytes): 1708032
Max private mem (bytes):  91201536
ALL CORRECT
[SATBackend] Stats for last run:
      [solution stats]
      successful? ---------------------> true
      elapsed time (s) ----------------> 0.053
      model building time (s) ---------> 0.0
      solution time (s) ---------------> 0.0
      max memory usage (MiB) ----------> 88.46094
      [SAT-specific solution stats]
      initial number of nodes ---------> 13
      number of nodes after opts ------> 76
      number of controls --------------> 0
      total number of control bits ----> 0

[SATBackend] Solver exit value: 0
    [0;32m[1584382448.1730 - DEBUG] Running stage 'subst' -- Substitute a solution (assignment to ??'s) into the sketch[0m
    [0;32m[1584382448.1740 - DEBUG] Running stage 'cleanup' -- Clean up sketch after substitutions for readability[0m
    [0;32m[1584382448.1860 - DEBUG] Running stage 'outputc' -- Output C code (to console or file)[0m
    [0;33m[1584382448.1960 - NOTE] Wrote test harness to ./miniTestb380_test.cpp[0m
[SKETCH] DONE
Total time = 345
