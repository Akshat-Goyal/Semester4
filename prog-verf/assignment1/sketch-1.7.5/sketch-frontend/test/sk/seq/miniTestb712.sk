package P2{
    
    T apply<T, Q>(T t1, Q t2, fun f){
        return f(t1, t2);
    }
    
    T reduce<T>(T t1, T t2, T t3, fun add){
        T tt = apply(t1, t2, add);
        return apply(tt, t3, add);
    }
    harness void main(int q){        
        int gg(int x, int y){
            return x + y;
        }
        assert reduce(q, 5, 3, gg)==q+??;
    }    
}

package P1{
        
    T reduce<T>(T t1, T t2, T t3, fun add){
        T doTwo(){
            T tt = apply@P2(t1, t2, add);
            return tt;
        }
        return apply@P2(doTwo(), t3, add);
    }
    int gg<T>(int x, T y){
        return x;
    }
    harness void main(int q){                
        assert reduce(q, 5, 3, gg)==q+??;
    }    
}