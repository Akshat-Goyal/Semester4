pragma options "--bnd-unroll-amnt 16 --bnd-arr-size 16";
pragma options "--bnd-inbits 2";
// 5 i 1
// 5 i 2
stencil bit[N][M] test(int N,int M, bit[N][M] in){
    bit[N][M] out;
    if(M>1){
        bit tmp= in[0][0];
        for(int i=0; i<N; ++i){
            for(int j=1; j<M; ++j){
                out[j][i] = tmp;
                tmp = in[j][i];
            }
        } 
    }
    return out;
}

/*
stencil bit[N][M] sk(int N,int M, bit[N][M] in) implements test{
    bit[N][M] out;   
    for(int i=0; i<N; ++i){
        if(i==0){ out[1][i] = in[0][i]; }
        else{ out[??][i] = in[M-1][i-1]; }
        for(int j=2; j<M; ++j){
            out[j][i] = in[j-1][i];
        }
    }
    return out;
}
*/
stencil bit[N][M] sk(int N,int M, bit[N][M] in) implements test{
    bit[N][M] out;   
    if(M>1){
    for(int i=??; i<N; ++i){
        if(i==0){ out[1][i] = in[{| (i|N|M)-1+?? | ?? |}][{| (i|N|M)-1+?? | ?? |}]; }
        else{ out[??][i] = in[{| (i|N|M)-1+?? | ?? |}][{| (i|N|M)-1+?? | ?? |} ]; }
        for(int j=??; j<M; ++j){
            out[j][i] = in[j-1+??][i-1+??];
        }
    }
    }
    return out;
}
