int foo([int n], int[n] x){
    return x[0];
}

int bar([int n], int[n] t){
    return t[0];
}

harness int main(int n){
    assume n == 2;
    assume foo({2})==2;
    while(foo({2})==1){
        return foo({3});
    }
    assert bar({foo({1}), foo({2}), foo({3})}[0::n])==??;
}


harness void mainb(int n){
    int t = foo({2});
    assume t == 2;
    foo({2});
    if(t == n){
        t = foo({2});
    }
    assume t <= 3;
    foo({2});
}