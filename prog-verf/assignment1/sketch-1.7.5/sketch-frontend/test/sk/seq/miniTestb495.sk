pragma options "--bnd-inbits 3 --bnd-unroll-amnt 8";

struct Bar{    
    int x;
}

int gt;

void moo(ref int t, Bar b){    
    foo(b.x, t);
    assert b.x == gt*2 - 3;
}


void foo(ref int a, int b){
    a = b-1;
    a = a + b-2;    
}

harness void main(int t){
    gt = t;
    Bar b = new Bar(x=t);
    
    moo(b.x, b);
    //Remember, for functions, reference parameters are 
    // copy-in/copy-out, so even though b.x is overwritten inside foo, the copy out
    //after moo will restore it, because moo did not modify its reference parameter t.
    
    assert b.x == t;
        
}