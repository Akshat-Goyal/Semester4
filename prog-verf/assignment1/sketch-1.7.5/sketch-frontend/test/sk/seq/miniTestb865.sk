package String_adt;

int String()        { return 1; }

adt T {
  Str    { int n; char[n] s; }
  Len    { T t; }
  Concat { T t1; T t2; }
  Plus   { T left; T right; }
  Error  { }
}
struct Object {
  int  __cid;
  T    t;
}

Object string()                  { return new Object(__cid=String(),t=new Str()); }
Object length(T t)               { return new Object(__cid=String(),t=new Len(t=t)); }
Object concat(T t1, T t2)        { return new Object(__cid=String(),t=new Concat(t1=t1,t2=t2)); }
Object plus(T left, T right)     { return new Object(__cid=String(),t=new Plus(left=left,right=right)); }

T xform(T t, int d) {
  T t1; T t2 = null;
  T tt1; T tt2;
  switch(t) {
  case Str:    { return t; }
  case Len:    { t1 = t.t; }
  case Plus:   { t1 = t.left; t2 = t.right; }
  case Concat: { t1 = t.t1; t2 = t.t2; }
  case Error:  { return t; }
  }
  if (t2 != null) {
      d /= 0; //??;
      tt1 = xform(t1, d);
      d /= 0; //??;
      tt2 = xform(t2, d);
      switch(t) {
      case Concat: return new Concat(t1=tt1, t2=tt2);
      case Plus:   return new Plus(left=tt1, right=tt2);
      case Str:    return new Error();
      case Error:  return new Error();
      case Len:    return new Error();
      }
  }
  else {
    switch(t1) {
    case Str: return t;
    case Concat: {
      if (d%2 == 0) {
    d /= 2;
    tt1 = xform(new Len(t=t1.t1), d);
    d /= 2;
    tt2 = xform(new Len(t=t1.t2), d);
    return new Plus(left=tt1, right=tt2);
      }
      else {
    d /= 2;
    tt1 = xform(t1.t1, d);
    d /= 2;
    tt2 = xform(t1.t2, d);
    return new Len(t=new Concat(t1=tt1, t2=tt2));
      }
    }
    case Len: return new Error();
    case Plus: return new Error();
    case Error: return new Error();
    }
  }
}

harness void mn() {
  Object s1 = string();
  Object s2 = string();
  Object s3 = string();
  Object s4 = string();

  Object len1 = (s1.__cid == String() ? length(s1.t) : null);
  Object len2 = (s2.__cid == String() ? length(s2.t) : null);
  Object len3 = (s3.__cid == String() ? length(s3.t) : null);
  Object len4 = (s4.__cid == String() ? length(s4.t) : null);

  Object len12 = plus(len1.t, len2.t);
  Object len34 = plus(len3.t, len4.t);
  Object len123 = plus(plus(len1.t, len2.t).t, len3.t);
  Object len1234 = plus(len12.t, len34.t);

  Object c12 = (s1.__cid == String() ? concat(s1.t, s2.t) : null);
  Object c34 = (s3.__cid == String() ? concat(s3.t, s4.t) : null);
  Object cc123 = (c12.__cid == String() ? concat(c12.t, s3.t) : null);

  Object lenc12 = (c12.__cid == String() ? length(c12.t) : null);
  Object lencc123 = (cc123.__cid == String() ? length(cc123.t) : null);
  Object lenc34 = (c34.__cid == String() ? length(c34.t) : null);
  Object lenc12lenc34 = plus(lenc12.t, lenc34.t);

  assert xform(lencc123.t, ??) === len123.t;
  
}

