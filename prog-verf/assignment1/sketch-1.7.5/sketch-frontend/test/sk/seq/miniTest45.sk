int N = 3;

generator bit leq(bit x, bit y){ /* automatically rewritten */
	return !x || y;
}
bit mergeSort(bit[N] input)implements sort{
	bit output = 1;
	bit[N] done = 0;
	int k=0;
	
	if( !input[2] ){
		k = 2;
	}else{
		if( !input[1] ){
			k = 1;
		}else{
			if( !input[0] ){
				k = 0;
			}else{
				k = 2;
			}
		}
	}		
	done[k] = 1;
	{
		bit cur = 1;
		for(int j=0; j<N; ++j){
			if( leq(input[j], cur) && !done[j]){
				cur = input[j];
			}
		}
		output = cur;
	}
	return output;
}


bit sort(bit[N] input){
	bit output=1;
	if( input[0] && input[1] && input[2] ){  output = 1;  };
	if(!input[0] && input[1] && input[2] 
	||  input[0] && !input[1] && input[2] 
	||	input[0] && input[1] && !input[2] ){ output = 1;  };
	if( input[0] && !input[1] && !input[2] 
	||  !input[0] && input[1] && !input[2] 
	||	!input[0] && !input[1] && input[2]){  output = 0;  };
	if( !input[0] && !input[1] && !input[2] ){output = 0;  };

	return output;
}