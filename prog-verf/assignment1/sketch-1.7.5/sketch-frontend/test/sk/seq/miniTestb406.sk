package MAIN;

include "miniTestb406.skh";
include "miniTestb406b.skh";

struct A{
    int e;
    int f;
}

int call(int x){
    return x;
}

int foo1(int x){
    return x+x;
}

int call_foo3(int x){
    return x+x;
}



harness void main(int x){
    A a1 = new A(e=x, f=x);
    A@PRIME a2 = new A@PRIME(a=x+1, b=x+1);
    A@BIS a3 = new A@BIS(c=x+2, d=x+2);
    generator int foo(){
        return a1.e + a3.c - a2.a;
    }
    int rv = call@BIS(foo);
    assert rv == a2.a;
    assert x == call(x);
    assert x+x == foo1(x);
    assert x+x == call_foo3(x);
    assert x+x == call_foo31(x);
    assert x+x == foo2(x,x);
}