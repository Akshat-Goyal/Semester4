/*
This sketch is designed to find an invariant for the following problem:

{y=y_0, k=k_0, t=y_0-k_0}
while(t>0){
           y = y-1;
           t = t-1;
}
Assert y <= k_0;

*/
include "generators.skh";
pragma options "--bnd-inline-amnt 3";

bit inv(int y, int y_0, int k, int k_0, int t){
return exprBool({y, y_0, k, k_0, t}, {PLUS}); 
    
}


harness void main(int y, int y_0, int k, int k_0, int t,
                  int yp, int tp, int ypp, int tpp
   ){
   if(y==y_0 && k==k_0 && t==y_0-k_0){
      assert inv(y, y_0, k, k_0, t);
      if(inv(yp, y_0, k, k_0, tp) && tp>0){
         assert inv(yp-1, y_0, k, k_0, tp-1);
      }
      if(inv(ypp, y_0, k, k_0, tpp) && tpp<=0){
          assert ypp <= k_0;
      }
   }

}

