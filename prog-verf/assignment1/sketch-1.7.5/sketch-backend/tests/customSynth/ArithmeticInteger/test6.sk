
//include "generators2.skh";
pragma options "--beopt:custintsize 11";

#define DEPTH 6
@Gen("arithexpr_4d_3v_plus_times")
int arithExpr(int x, int y, int z);

generator int expr(int x, int y, int z, int d){
	if (d==0){
		if (??){
			return x;
		}
		else if (??){
			return y;
		}
		else{
			return z;
		}
	}

	if (??){
		return x;
	}
	else if (??){
		return y;
	}
	else if (??){
		return z;
	}
	else{
		
		int e1 = expr(x,y,z,d-1);
		int e2 = expr(x,y,z,d-1);
		if (??){
			return e1+e2;
		}
		else{
			return e1*e2;
		}
	}
}

int exprFixed(int x, int y, int z){
	//int[3] operands = {x,y,z};
	//int[2] operations = {PLUS,TIMES};
	return arithExpr( expr(x,y,z,2),(y*y+z*z)*x,z*z*(z+x+y));
	//return expr(x,y,z,DEPTH);
}

harness void main(){
	/*
	//x*x + y*y*z + z*z*z;
	assert(exprFixed(1,1,2) == 11);
	assert(exprFixed(2,1,3) == 34);
	assert(exprFixed(1,2,4) == 81);

	*/
	//x*(x+y) + (y*y+z*z)*x + z*z*(z+x+y) 
	assert(exprFixed(1,2,4) == 135);
	assert(exprFixed(1,2,6) == 367);
	assert(exprFixed(1,2,7) == 546);
	assert(exprFixed(1,2,3) == 70);
	assert(exprFixed(1,2,8) == 775);
	assert(exprFixed(1,3,4) == 157);
	assert(exprFixed(1,3,6) == 409);
	assert(exprFixed(1,3,7) == 601);
	assert(exprFixed(1,3,3) == 85);
	assert(exprFixed(1,3,8) == 845);
	assert(exprFixed(1,4,4) == 181);
	assert(exprFixed(1,4,6) == 453);
	assert(exprFixed(1,4,7) == 658);
	assert(exprFixed(1,4,3) == 102);
	assert(exprFixed(1,4,8) == 917);
	assert(exprFixed(1,5,4) == 207);
	assert(exprFixed(1,5,6) == 499);
	assert(exprFixed(1,5,7) == 717);
	assert(exprFixed(1,5,3) == 121);
	assert(exprFixed(1,5,8) == 991);
	assert(exprFixed(1,6,4) == 235);
	assert(exprFixed(1,6,6) == 547);
	assert(exprFixed(1,6,7) == 778);
	assert(exprFixed(1,6,3) == 142);
	assert(exprFixed(1,6,8) == 1067);
	assert(exprFixed(2,2,4) == 176);
	assert(exprFixed(2,2,6) == 448);
	assert(exprFixed(2,2,7) == 653);
	assert(exprFixed(2,2,3) == 97);
	assert(exprFixed(2,2,8) == 912);
	assert(exprFixed(2,3,4) == 204);
	assert(exprFixed(2,3,6) == 496);
	assert(exprFixed(2,3,7) == 714);
	assert(exprFixed(2,3,3) == 118);
	assert(exprFixed(2,3,8) == 988);
	assert(exprFixed(2,4,4) == 236);
	assert(exprFixed(2,4,6) == 548);
	assert(exprFixed(2,4,7) == 779);
	assert(exprFixed(2,4,3) == 143);
	assert(exprFixed(2,4,8) == 1068);
	assert(exprFixed(2,5,4) == 272);
	assert(exprFixed(2,5,6) == 604);
	assert(exprFixed(2,5,7) == 848);
	assert(exprFixed(2,5,3) == 172);
	assert(exprFixed(2,5,8) == 1152);
	assert(exprFixed(2,6,4) == 312);
	assert(exprFixed(2,6,6) == 664);
	assert(exprFixed(2,6,7) == 921);
	assert(exprFixed(2,6,3) == 205);
	assert(exprFixed(2,6,8) == 1240);
	assert(exprFixed(3,2,4) == 219);
	assert(exprFixed(3,2,6) == 531);
	assert(exprFixed(3,2,7) == 762);
	assert(exprFixed(3,2,3) == 126);
	assert(exprFixed(3,2,8) == 1051);
	assert(exprFixed(3,3,4) == 253);
	assert(exprFixed(3,3,6) == 585);
	assert(exprFixed(3,3,7) == 829);
	assert(exprFixed(3,3,3) == 153);
	assert(exprFixed(3,3,8) == 1133);
	assert(exprFixed(3,4,4) == 293);
	assert(exprFixed(3,4,6) == 645);
	assert(exprFixed(3,4,7) == 902);
	assert(exprFixed(3,4,3) == 186);
	assert(exprFixed(3,4,8) == 1221);
	assert(exprFixed(3,5,4) == 339);
	assert(exprFixed(3,5,6) == 711);
	assert(exprFixed(3,5,7) == 981);
	assert(exprFixed(3,5,3) == 225);
	assert(exprFixed(3,5,8) == 1315);
	assert(exprFixed(3,6,4) == 391);
	assert(exprFixed(3,6,6) == 783);
	assert(exprFixed(3,6,7) == 1066);
	assert(exprFixed(3,6,3) == 270);
	assert(exprFixed(3,6,8) == 1415);
	assert(exprFixed(4,2,4) == 264);
	assert(exprFixed(4,2,6) == 616);
	assert(exprFixed(4,2,7) == 873);
	assert(exprFixed(4,2,3) == 157);
	assert(exprFixed(4,2,8) == 1192);
	assert(exprFixed(4,3,4) == 304);
	assert(exprFixed(4,3,6) == 676);
	assert(exprFixed(4,3,7) == 946);
	assert(exprFixed(4,3,3) == 190);
	assert(exprFixed(4,3,8) == 1280);
	assert(exprFixed(4,4,4) == 352);
	assert(exprFixed(4,4,6) == 744);
	/*assert(exprFixed(4,4,7) == 1027);
	assert(exprFixed(4,4,3) == 231);
	assert(exprFixed(4,4,8) == 1376);
	assert(exprFixed(4,5,4) == 408);
	assert(exprFixed(4,5,6) == 820);
	assert(exprFixed(4,5,7) == 1116);
	assert(exprFixed(4,5,3) == 280);
	assert(exprFixed(4,5,8) == 1480);
	assert(exprFixed(4,6,4) == 472);
	assert(exprFixed(4,6,6) == 904);
	assert(exprFixed(4,6,7) == 1213);
	assert(exprFixed(4,6,3) == 337);
	assert(exprFixed(4,6,8) == 1592);
	assert(exprFixed(5,2,4) == 311);
	assert(exprFixed(5,2,6) == 703);
	assert(exprFixed(5,2,7) == 986);
	assert(exprFixed(5,2,3) == 190);
	assert(exprFixed(5,2,8) == 1335);
	assert(exprFixed(5,3,4) == 357);
	assert(exprFixed(5,3,6) == 769);
	assert(exprFixed(5,3,7) == 1065);
	assert(exprFixed(5,3,3) == 229);
	assert(exprFixed(5,3,8) == 1429);
	assert(exprFixed(5,4,4) == 413);
	assert(exprFixed(5,4,6) == 845);
	assert(exprFixed(5,4,7) == 1154);
	assert(exprFixed(5,4,3) == 278);
	assert(exprFixed(5,4,8) == 1533);
	assert(exprFixed(5,5,4) == 479);
	assert(exprFixed(5,5,6) == 931);
	assert(exprFixed(5,5,7) == 1253);
	assert(exprFixed(5,5,3) == 337);
	assert(exprFixed(5,5,8) == 1647);
	assert(exprFixed(5,6,4) == 555);
	assert(exprFixed(5,6,6) == 1027);
	assert(exprFixed(5,6,7) == 1362);
	assert(exprFixed(5,6,3) == 406);
	assert(exprFixed(5,6,8) == 1771);*/

}